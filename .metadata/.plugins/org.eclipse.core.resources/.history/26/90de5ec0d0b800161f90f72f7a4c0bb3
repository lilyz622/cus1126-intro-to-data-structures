
public class BT {
	public Node root;
	public int count = 0b0;
	
	public void add(int[] info){
		for (int i = 0; i<info.length; i++){
			add(info[i]);
		}
	}
	
	
	public void add(int info){
		Node newNode = new Node(info);
		if (root == null){
			root = newNode;
			count = 0b1;
			return;
		}
		
		Node current = root;
		count++;
		
		int countlength = Integer.toBinaryString(count).length();
		char[] charset = Integer.toBinaryString(count).toCharArray();
		int pointer = 1;
		Node parent = null;
		while (pointer <= countlength-1){
			
			parent = current;
			if (charset[pointer] == '0'){
				current = current.leftChild;
				if (pointer == countlength-1){
					parent.leftChild = newNode;
				}
			} else if (charset[pointer] == '1'){
				current = current.rightChild;
				if (pointer == countlength-1){
					parent.rightChild = newNode;
				}
			}
			pointer++;
		}
		count++;
		
		
		
	}
	
	public void inOrderTraverse(Node current){
		if (current!= null){
			inOrderTraverse(current.leftChild);
			System.out.print(current.info+",");
			inOrderTraverse(current.rightChild);
		}
	}

}
